amp <- read.csv("amphetamines.csv")
##2
ben <- read.csv("Benzodiazapines.csv")
##3
can <- read.csv("Cannabinoids.csv")
##4
coc <- read.csv("Cocaine metabolites.csv")
##5
mtd <- read.csv("Methadone.csv")
##6
mtp <- read.csv("Methamphetamine.csv")
##7
oxy <- read.csv("Oxycodone.csv")
##8
pph <- read.csv("Propoxyphene.csv")
#first four weeks for all 9 substances
first4wk <- data.frame(opd$BASELINE, opd$WK1, opd$WK2, opd$WK3, opd$WK4,
amp$BASELINE, amp$WK1, amp$WK2, amp$WK3, amp$WK4,
ben$BASELINE, ben$WK1, ben$WK2, ben$WK3, ben$WK4,
can$BASELINE, can$WK1, can$WK2, can$WK3, can$WK4,
coc$BASELINE, coc$WK1, coc$WK2, coc$WK3, coc$WK4,
mtd$BASELINE, mtd$WK1, mtd$WK2, mtd$WK3, mtd$WK4,
mtp$BASELINE, mtp$WK1, mtp$WK2, mtp$WK3, mtp$WK4,
oxy$BASELINE, oxy$WK1, oxy$WK2, oxy$WK3, oxy$WK4,
pph$BASELINE, pph$WK1, pph$WK2, pph$WK3, pph$WK4)
#treatement
t <- opd$treatment
#outcome
outcome <- opd[,c("WK21", "WK22", "WK23", "WK24")]
#2,-5 all treated as NA
#?These are people who showed up but result is unclear?
first4wk[first4wk==2] <- NA
first4wk[first4wk==-5] <- NA
apply(first4wk, 2, table)
library(Amelia)
missmap(first4wk)
first4wk <- data.frame(apply(first4wk, 2, as.factor))
#?consider all the variables as coutinous
library(mice)
fillin <- mice(data = first4wk,
method = "logreg")
fillin$imp$ben.WK4 #predictions look nice
complete.data <- complete(fillin, 5)
predicted.na <- complete(fillin, 5, TRUE)
outcome$pat <- apply(outcome, 1, paste, collapse = "")
y <- ifelse(outcome$pat=="0000", 0, 1)
table(y)
y <- as.factor(y)
all.data <- cbind(complete.data,t, y)
f <- formula(y~.^2)
x.mat <- model.matrix(f, data = all.data)
dim(x.mat)
#p = 1082, n = 1269
p <- ncol(x.mat)
n <- nrow(x.mat)
library(glmnet)
boot.x <- list(NA)
boot.y <- list(NA)
boot.coef <- matrix(NA, nrow = 10, ncol = p)
i<-1
boot.ind <- sample(1:n, n)
boot.x[[i]] <- x.mat[boot.ind, ]
boot.y[[i]] <- y[boot.ind]
mod <- glmnet(x = boot.x[[i]], y = boot.y[[i]],
family = "binomial",
lambda = lambda,
alpha = 1)
mod <- glmnet(x = boot.x[[i]], y = boot.y[[i]],
family = "binomial",
alpha = 1)
coef(mod)
head(coef(mod))
?cv.glmnet
mod <- cv.glmnet(x = boot.x[[i]], y = boot.y[[i]],
type.measure  = "class",
alpha = 1)
mod <- cv.glmnet(x = boot.x[[i]], y = boot.y[[i]],
type.measure = "class",
alpha = 1)
complete.data5 <- complete(fillin, 5)
complete.data4 <- complete(fillin, 4)
complete.data3 <- complete(fillin, 3)
head(fillin)
?mice
complete.data2 <- complete(fillin, 2)
complete.data1 <- complete(fillin, 1)
complete.data <- list(complete.data1, complete.data2, complete.data3, complete.data4,
complete.data5)
head(complete.data1[, 1:6])
head(complete.data2[, 1:6])
head(complete.data3[, 1:6])
all.data1 <- cbind(complete.data[[1]], t, y)
f <- formula(y~.^2)
x.mat <- model.matrix(f, data = all.data1)
dim(x.mat)
#p = 1082, n = 1269
p <- ncol(x.mat)
n <- nrow(x.mat)
library(glmnet)
boot.x <- list(NA)
boot.y <- list(NA)
boot.coef <- matrix(NA, nrow = 10, ncol = p)
j<-1
all.data <- cbind(complete.data[[j]], t, y)
x.mat <- model.matrix(f, data = all.data)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
boot.x <- list(list(NA))
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
dim(x.mat)
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
length(y.mat)
mod <- cv.glmnet(x = boot.x[[i]], y = boot.y[[i]],
type.measure = "class",
alpha = 1)
mod <- cv.glmnet(x = x.mat, y = y.mat,
type.measure = "class",
nfolds = 5,
alpha = 1)
y.mat <- as.numeric(y.mat)
mod <- cv.glmnet(x = x.mat, y = y.mat,
type.measure = "class",
nfolds = 5,
alpha = 1)
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
?cv.glmnet
mod <- cv.glmnet(x = x.mat, y = y.mat,
type.measure = "class",
nfolds = 5,
alpha = 1)
table(y.mat)
class(y.mat)
?glmnet
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
coef(mod)
boot.coef <- list(rep(matrix(NA, nrow = 5, ncol = p)))
boot.coef[[i]][j, ] <- coef(mod)
class(coef(mod))
pred <- predict(mod, s="lambda.min")
pred <- predict(mod, newx = boot.x[[i]][[j]], s="lambda.min")
boot.coef[[i]][j, ] <- as.vector(t(coef(mod,s="lambda.min")))
as.vector(t(coef(mod,s="lambda.min")))
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef <- list(rep(matrix(NA, nrow = 5, ncol = p + 1)))
boot.coef <- list(rep(matrix(NA, nrow = 5, ncol = p + 1), 10))
boot.coef[[i]][j, ] <- beta
boot.coef <- list(rep(matrix(NA, nrow = 5, ncol = p + 1), 10))
length(boot.coef)
?array
boot.coef[[i]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.coef[[i]][j, ] <- beta
j <- 2
all.data <- cbind(complete.data[[j]], t, y)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[i]][j, ] <- beta
head(boot.coef[[i]])
head(boot.coef[[i]][, 1:6])
for(i in 1:10){
boot.ind <- sample(1:n, n)
boot.coef[[i]] <- matrix(NA, nrow = 5, ncol = p + 1)
for(j in 1:5){
all.data <- cbind(complete.data[[j]], t, y)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[i]][j, ] <- beta
}
}
boot.x[[i]] <- list(NA)
i <-1
boot.ind <- sample(1:n, n)
boot.coef[[i]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.x[[i]] <- list(NA)
for(j in 1:5){
all.data <- cbind(complete.data[[j]], t, y)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[i]][j, ] <- beta
}
head(boot.coef[[i]][[,1:6]])
head(boot.coef[[i]][ ,1:6])
head(boot.x[[i]][[1]])
head(boot.x[[i]][[2]])
j <- 2
i <- 2
boot.ind <- sample(1:n, n)
boot.ind <- sample(1:n, n)
boot.coef[[i]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.x[[i]] <- list(NA)
for(j in 1:5){
all.data <- cbind(complete.data[[j]], t, y)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[i]][j, ] <- beta
}
for(i in 1:10){
boot.ind <- sample(1:n, n)
boot.coef[[i]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.x[[i]] <- list(NA)
for(j in 1:5){
all.data <- cbind(complete.data[[j]], t, y)
boot.x[[i]][[j]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.x[[i]][[j]])
y.mat <- boot.x[[i]][[j]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[i]][j, ] <- beta
}
}
head(boot.coef[[1]])
head(boot.coef[[1]][,1:6])
head(boot.coef[[2]][,1:6])
head(boot.coef[[3]][,1:6])
head(boot.coef[[4]][,1:6])
head(boot.coef[[5]][,1:6])
knitr::opts_knit$set(root.dir = "C:/Users/yingj/OneDrive/Documents/data-cleaned")
#load all substances
##0
opd <- read.csv("opioid.csv")
##1
amp <- read.csv("amphetamines.csv")
##2
ben <- read.csv("Benzodiazapines.csv")
##3
can <- read.csv("Cannabinoids.csv")
##4
coc <- read.csv("Cocaine metabolites.csv")
##5
mtd <- read.csv("Methadone.csv")
##6
mtp <- read.csv("Methamphetamine.csv")
##7
oxy <- read.csv("Oxycodone.csv")
##8
pph <- read.csv("Propoxyphene.csv")
#first four weeks for all 9 substances
first4wk <- data.frame(opd$BASELINE, opd$WK1, opd$WK2, opd$WK3, opd$WK4,
amp$BASELINE, amp$WK1, amp$WK2, amp$WK3, amp$WK4,
ben$BASELINE, ben$WK1, ben$WK2, ben$WK3, ben$WK4,
can$BASELINE, can$WK1, can$WK2, can$WK3, can$WK4,
coc$BASELINE, coc$WK1, coc$WK2, coc$WK3, coc$WK4,
mtd$BASELINE, mtd$WK1, mtd$WK2, mtd$WK3, mtd$WK4,
mtp$BASELINE, mtp$WK1, mtp$WK2, mtp$WK3, mtp$WK4,
oxy$BASELINE, oxy$WK1, oxy$WK2, oxy$WK3, oxy$WK4,
pph$BASELINE, pph$WK1, pph$WK2, pph$WK3, pph$WK4)
#treatement
t <- opd$treatment
#outcome
outcome <- opd[,c("WK21", "WK22", "WK23", "WK24")]
#2,-5 all treated as NA
#?These are people who showed up but result is unclear?
first4wk[first4wk==2] <- NA
first4wk[first4wk==-5] <- NA
apply(first4wk, 2, table)
library(Amelia)
missmap(first4wk)
first4wk <- data.frame(apply(first4wk, 2, as.factor))
#?consider all the variables as coutinous
library(mice)
fillin <- mice(data = first4wk,
method = "logreg")
fillin$imp$ben.WK4 #predictions look nice
complete.data5 <- complete(fillin, 5)
complete.data4 <- complete(fillin, 4)
complete.data3 <- complete(fillin, 3)
complete.data2 <- complete(fillin, 2)
complete.data1 <- complete(fillin, 1)
complete.data <- list(complete.data1, complete.data2, complete.data3, complete.data4,
complete.data5)
View(complete.data1)
View(complete.data2)
sum(complete.data1!=complete.data2)
3995/(1269*45)
sum(complete.data2!=complete.data3)
outcome$pat <- apply(outcome, 1, paste, collapse = "")
y <- ifelse(outcome$pat=="0000", 0, 1)
table(y)
y <- as.factor(y)
#p = 1082, n = 1269
p <- ncol(x.mat)
n <- nrow(first4wk)
#p = 1082, n = 1269
p <- 1082
f <- formula(y~.^2)
library(glmnet)
boot.samp <- list()
boot.coef <- list()
boot.ind <- sample(1:n, n)
b<-1
boot.coef[[b]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.x[[b]] <- list(NA)
boot.samp[[b]] <- list(NA)
m <- 1
all.data <- cbind(complete.data[[m]], t, y)
boot.samp[[b]][[m]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.sample[[b]][[m]])
x.mat <- model.matrix(f, data = boot.samp[[b]][[m]])
dim(x.mat)
y.mat <- boot.samp[[b]][[m]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[b]][m, ] <- beta
head(beta,20)
sum(beta!=0)
?coef.cv.glmnet
?predict.cv.glmnet
?lambda.min
??lambda.min
?glmnet
?cv.glmnet
for(m in 1:5){
all.data <- cbind(complete.data[[m]], t, y)
boot.samp[[b]][[m]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.samp[[b]][[m]])
y.mat <- boot.samp[[b]][[m]]$y[boot.ind]
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[b]][m, ] <- beta
}
head(boot.coef[, 1:10])
head(boot.coef[[b]][, 1:10])
table(y.mat)
m<-1
b<-1
boot.ind <- sample(1:n, n)
boot.coef[[b]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.samp[[b]] <- list(NA)
all.data <- cbind(complete.data[[m]], t, y)
boot.samp[[b]][[m]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.samp[[b]][[m]])
y.mat <- boot.samp[[b]][[m]]$y
table(y.mat)
head(y.mat, 20)
head(y, 20)
sum(y.mat!=y)
for(m in 1:5){
all.data <- cbind(complete.data[[m]], t, y)
boot.samp[[b]][[m]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.samp[[b]][[m]])
y.mat <- boot.samp[[b]][[m]]$y
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[b]][m, ] <- beta
}
head(boot.coef[[b]][,1:20], 20)
head(boot.coef[[b]][,1:10], 10)
boot.coef[[b]][1:10, 1:10]
boot.coef[[b]][, 1:15]
for(b in 1:10){
boot.ind <- sample(1:n, n)
boot.coef[[b]] <- matrix(NA, nrow = 5, ncol = p + 1)
boot.samp[[b]] <- list(NA)
for(m in 1:5){
all.data <- cbind(complete.data[[m]], t, y)
boot.samp[[b]][[m]] <- all.data[boot.ind, ]
x.mat <- model.matrix(f, data = boot.samp[[b]][[m]])
y.mat <- boot.samp[[b]][[m]]$y
mod <- cv.glmnet(x = x.mat, y = y.mat,
family = "binomial",
type.measure = "class",
nfolds = 5,
alpha = 1)
beta <- as.vector(t(coef(mod,s="lambda.min")))
boot.coef[[b]][m, ] <- beta
}
}
boot.coef[[2]][, 1:10]
boot.coef[[1]][,1:10]
boot.coef[[3]][,1:10]
boot.coef[[4]][,1:10]
boot.coef[[5]][,1:10]
save.image("~/MIRLe.RData")
boot.coef[[1]][,1:10]
boot.coef[[2]][,1:10]
knitr::opts_knit$set(root.dir = "C:/Users/yingj/OneDrive/Documents/data-cleaned")
#load all substances
##0
opd <- read.csv("opioid.csv")
##1
amp <- read.csv("amphetamines.csv")
##2
ben <- read.csv("Benzodiazapines.csv")
##3
can <- read.csv("Cannabinoids.csv")
##4
coc <- read.csv("Cocaine metabolites.csv")
##5
mtd <- read.csv("Methadone.csv")
##6
mtp <- read.csv("Methamphetamine.csv")
##7
oxy <- read.csv("Oxycodone.csv")
##8
pph <- read.csv("Propoxyphene.csv")
#first four weeks for all 9 substances
first4wk <- data.frame(opd$BASELINE, opd$WK1, opd$WK2, opd$WK3, opd$WK4,
amp$BASELINE, amp$WK1, amp$WK2, amp$WK3, amp$WK4,
ben$BASELINE, ben$WK1, ben$WK2, ben$WK3, ben$WK4,
can$BASELINE, can$WK1, can$WK2, can$WK3, can$WK4,
coc$BASELINE, coc$WK1, coc$WK2, coc$WK3, coc$WK4,
mtd$BASELINE, mtd$WK1, mtd$WK2, mtd$WK3, mtd$WK4,
mtp$BASELINE, mtp$WK1, mtp$WK2, mtp$WK3, mtp$WK4,
oxy$BASELINE, oxy$WK1, oxy$WK2, oxy$WK3, oxy$WK4,
pph$BASELINE, pph$WK1, pph$WK2, pph$WK3, pph$WK4)
#treatement
t <- opd$treatment
#outcome
outcome <- opd[,c("WK21", "WK22", "WK23", "WK24")]
#2,-5 all treated as NA
#?These are people who showed up but result is unclear?
first4wk[first4wk==2] <- NA
first4wk[first4wk==-5] <- NA
apply(first4wk, 2, table)
outcome$pat <- apply(outcome, 1, paste, collapse = "")
y <- ifelse(outcome$pat=="0000", 0, 1)
table(y)
y <- as.factor(y)
p <- 1082
n <- nrow(first4wk)
f <- formula(y~.^2)
install.packages("MIRL")
library(MIRL)
?mirl
pdata <- cbind(first4wk, t, y)
class(pdata$opd.WK1)
pdata <- data.frame(apply(pdata, 2, as.factor))
px.mat <- model.matrix(f, data = pdata)
dim(px.mat)
dim(pdata)
py.mat <- pdata$y
length(py.mat)
px.mat <- model.matrix(f, data = pdata)
dim(px.mat)
View(px.mat)
pdata <- cbind(first4wk, t, y)
dim(pdata)
pdata <- data.frame(apply(pdata, 2, as.factor))
dim(pdata)
class(pdata$pph.WK2)
f <- formula(y~.^2)
px.mat <- model.matrix(f, data = pdata)
dim(px.mat)
?model.matrix
dim(x.mat)
pdata <- cbind(first4wk, t, y)
class(pdata$pph.WK2)
px.mat <- model.matrix(f, data = pdata)
dim(px.mat)
??na.action
??na.action.default
pdata <- model.frame(f, pdata)
View(pdata)
View(pdata)
pdata <- model.frame(f, pdata, na.action = "na.pass")
pdata <- cbind(first4wk, t, y)
pdata <- model.frame(f, pdata, na.action = "na.pass")
dim(pdata)
pdata <- model.frame(f, pdata, na.action = "na.pass")
pdata <- model.frame(f, pdata, na.action = "na.fail")
pdata <- cbind(first4wk, t, y)
pmat <- model.frame(f, pdata, na.action = "na.fail")
pmat <- model.frame(f, pdata)
sum(pmat==NA)
sum(is.na(pmat))
